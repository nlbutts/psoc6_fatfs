/*******************************************************************************
* File Name: cycfg_usbdev.h
* Version 1.0
*
* Description:
* USB Device middleware configuration
* This file should not be modified. It was automatically generated by
* USB Configurator 1.1.0 build 220
*
********************************************************************************
* \copyright
* Copyright 2019 Cypress Semiconductor Corporation
* SPDX-License-Identifier: Apache-2.0
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*******************************************************************************/

#if !defined(CYCFG_USBDEV_H)
#define CYCFG_USBDEV_H

#include <stddef.h>
#include "cy_device_headers.h"

#if defined(CY_PSOC_CREATOR_USED)
    #include "USBUART.h"

    /* Enable code for both cores */
    #define USBUART_USB_CORE __CORTEX_M

    /* Endpoint Buffer Size */
    #define USBUART_ENDPOINTS_BUFFER_SIZE (140U)

    #if (USBUART_ACTIVE_ENDPOINTS_MASK != 0x7U)
    #error The USB Device peripheral parameter Endpoint Mask expected value is 0x7. Change Endpoint Mask to this value or run the USB Configurator using PSoC Creator and adjust the number of active endpoints.
    #endif

#else
    #include "cycfg_peripherals.h"

    #if !defined(USBUART_HW)
        #error The USB Device peripheral Alias expected name is 'USBUART'. Change Alias to 'USBUART' or run the USB Configurator using ModusToolbox and save configuration.
    #else
        #if !defined(USBUART_USB_CORE)
            #error The target core is not selected for USB Device Middleware operation in the cycfg_peripherals.h: missing #define USBUART_USB_CORE.
        #endif

        #if defined(USBUART_USB_CORE) && (USBUART_USB_CORE == __CORTEX_M)

            #if !defined(USBUART_ACTIVE_ENDPOINTS_MASK)
            #error The active endpoint mask is not set in the cycfg_peripherals.h: missing #define USBUART_ACTIVE_ENDPOINTS_MASK.
            #endif

            #if !defined(USBUART_ENDPOINTS_BUFFER_SIZE)
            #error The endpoints buffer size is not set in the cycfg_peripherals.h: missing #define USBUART_ENDPOINTS_BUFFER_SIZE.
            #endif

            #if defined(USBUART_ACTIVE_ENDPOINTS_MASK) && defined(USBUART_ENDPOINTS_BUFFER_SIZE)

                #if (USBUART_ACTIVE_ENDPOINTS_MASK != 0x7U)
                #error The USB Device peripheral configuration and USB Device Descriptors are out of synchronization. Run the USB Configurator using ModusToolbox and save the configuration.
                #endif

                #if (USBUART_ENDPOINTS_BUFFER_SIZE != 140U)
                #error The USB Device peripheral configuration and USB Device Descriptors are out of synchronization. Run the USB Configurator using ModusToolbox and save the configuration.
                #endif

            #endif

        #endif /* defined(USBUART_USB_CORE) && (USBUART_USB_CORE == __CORTEX_M) */

    #endif /* !defined(USBUART_HW) */

#endif /* defined(CY_PSOC_CREATOR_USED) */

#if defined(USBUART_USB_CORE) && (USBUART_USB_CORE == __CORTEX_M)
    
#if defined(__cplusplus)
extern "C" {
#endif

#include "cy_usb_dev_audio.h"
#include "cy_usb_dev_hid.h"
#include "cy_usb_dev_cdc.h"

/* Number of USB Device */
#define USBUART_NUM_DEVICES           (1)

/* Class specific defines */
#define USBUART_AUDIO_CLASS_SUPPORTED (0U)
#define USBUART_CDC_CLASS_SUPPORTED   (1U)
#define USBUART_HID_CLASS_SUPPORTED   (0U)


/* Array of USB Devices */
extern const cy_stc_usb_dev_device_t USBUART_devices[USBUART_NUM_DEVICES];

/* Device configuration */
extern const cy_stc_usb_dev_config_t USBUART_devConfig;
/* CDC configuration */
extern const cy_stc_usb_dev_cdc_config_t USBUART_cdcConfig;


/*
USB_CONFIG_START
<Configuration major="1" minor="0">
    <Node type="root">
        <Field name="devName" value="USBUART"/>
        <Node type="device">
            <Field name="bcdUSB" value="0x200"/>
            <Field name="bDeviceClass" value="0x02"/>
            <Field name="bDeviceSubClass" value="0"/>
            <Field name="bDeviceProtocol" value="0"/>
            <Field name="idVendor" value="0x4B4"/>
            <Field name="idProduct" value="0xF21D"/>
            <Field name="bcdDevice" value="0"/>
            <Field name="iManufacturer" value="Cypress Semiconductor"/>
            <Field name="iProduct" value="CDC Code Example"/>
            <Field name="iSerialNumber" value="12101010"/>
            <Node type="configuration">
                <Field name="iConfiguration" value=""/>
                <Field name="Self Powered" value="Disable"/>
                <Field name="Remote Wakeup" value="Disable"/>
                <Field name="bMaxPower" value="100"/>
                <Node type="interface.cdc">
                    <Node type="alternate.cdc.com">
                        <Field name="bInterfaceSubClass" value="0x02"/>
                        <Field name="bInterfaceProtocol" value="0"/>
                        <Field name="iInterface" value=""/>
                        <Node type="header.cdc">
                            <Field name="bcdADC" value="0x0110"/>
                        </Node>
                        <Node type="ac.manag.cdc">
                            <Field name="bmCapabilities" value="0x02"/>
                        </Node>
                        <Node type="union.cdc">
                            <Field name="bControlInterface" value="0"/>
                            <Field name="bSubordinateInterface" value="0x01"/>
                        </Node>
                        <Node type="call.manag.cdc">
                            <Field name="bmCapabilities" value="0"/>
                            <Field name="bDataInterface" value="0x01"/>
                        </Node>
                        <Node type="endpoint">
                            <Field name="endpointNum" value="EP1"/>
                            <Field name="direction" value="IN"/>
                            <Field name="Transfer Type" value="Interrupt"/>
                            <Field name="Synchronization Type" value="No Synchronization"/>
                            <Field name="Usage Type" value="Data endpoint"/>
                            <Field name="wMaxPacketSize" value="12"/>
                            <Field name="bInterval" value="10"/>
                        </Node>
                    </Node>
                </Node>
                <Node type="interface.cdc">
                    <Node type="alternate.cdc.data">
                        <Field name="bInterfaceSubClass" value="0"/>
                        <Field name="bInterfaceProtocol" value="0"/>
                        <Field name="iInterface" value=""/>
                        <Node type="endpoint">
                            <Field name="endpointNum" value="EP2"/>
                            <Field name="direction" value="IN"/>
                            <Field name="Transfer Type" value="Bulk"/>
                            <Field name="Synchronization Type" value="No Synchronization"/>
                            <Field name="Usage Type" value="Data endpoint"/>
                            <Field name="wMaxPacketSize" value="64"/>
                            <Field name="bInterval" value="0"/>
                        </Node>
                        <Node type="endpoint">
                            <Field name="endpointNum" value="EP3"/>
                            <Field name="direction" value="OUT"/>
                            <Field name="Transfer Type" value="Bulk"/>
                            <Field name="Synchronization Type" value="No Synchronization"/>
                            <Field name="Usage Type" value="Data endpoint"/>
                            <Field name="wMaxPacketSize" value="64"/>
                            <Field name="bInterval" value="0"/>
                        </Node>
                    </Node>
                </Node>
            </Node>
        </Node>
    </Node>
</Configuration>
USB_CONFIG_END
*/

#if defined(__cplusplus)
}
#endif

#endif /* defined(USBUART_USB_CORE) && (USBUART_USB_CORE == __CORTEX_M) */

#endif /* CYCFG_USBDEV_H */

/* [] END OF FILE */

